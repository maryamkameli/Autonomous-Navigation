max_obstacle_height: 2.0  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.25  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
footprint: [[0.25, 0.25], [0.25, -0.25], [-0.25,0]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  2.0
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             8
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: true
  observation_sources:  laserscan
  laserscan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.0 #scan data's real frame is head but it is broadcasted as base_link.
    max_obstacle_height: 1.6

  pointcloud:
    data_type: PointCloud2
    topic: /pepper_local_republisher/pepper_robot/camera/depth_registered/points
    marking: true
    clearing: true
    min_obstacle_height: 0.3 #scan data's real frame is head but it is broadcasted as base_link.
    max_obstacle_height: 1.9
    
static_layer:
  enabled: true

global_inflation_layer:
  enabled:              true
  cost_scaling_factor:  8.0  # exponential rate at which the obstacle cost drops off
  inflation_radius:     0.69  # max. distance from an obstacle at which costs are incurred for planning paths.

local_inflation_layer:
  enabled:              true
  cost_scaling_factor:  6.9  # exponential rate at which the obstacle cost drops off
  inflation_radius:     0.42
